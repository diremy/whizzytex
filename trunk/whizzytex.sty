% whizzytex.sty --- WhizzyTeX, a wysiwyg environment for TeX
%
%  Copyright (C) 2001, 2002 Didier Rémy
% 
%  WhizzyTeX is free software; you can redistribute it and/or modify
%  it under the terms of the GNU General Public License as published by
%  the Free Software Foundation; either version 2, or (at your option)
%  any later version.
%  
%  WhizzyTeX is distributed in the hope that it will be useful,
%  but WITHOUT ANY WARRANTY; without even the implied warranty of
%  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%  GNU General Public License for more details 
%  (enclosed in the file GPL).
%  
%  See the file COPYING enclosed with the distribution.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  File whizztex.sty (LaTeX macros)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\makeatletter
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Section 1: The core engine

%% Enforce nonstopmode, forever
\nonstopmode
\let \errorstopmode \relax
\let \scrollmode \relax
\let \batchmode \relax

%% General purpose

\def \whizzy@empty {}
\def \whizzy@ignore #1{}

%% A few patches are unsafe and conditionally applied (dynamic value)
\newif \ifwhizzy@tricks  \whizzy@trickstrue

%% Special effects for advi (static value)
\newif \ifwhizzy@advi
\@ifundefined {WhizzyAdvi}
  {\whizzy@advifalse}
  {\ifx \WhizzyAdvi1\whizzy@advitrue\fi}


%% \documentclass should be redefined to skip to \begin{document} 
%% and resumpe. No space must be there, emacs should check that.

%% Right before dumping
\def \whizzy@documentclass
   {\begingroup \let \do \@makeother \dospecials \whizzy@skip}

\begingroup
\catcode `\[ 1 \catcode `\] 2
\catcode `\{ 12 \catcode `\} 12
\catcode `| 0 \catcode`\\ 12
|global |long |def |whizzy@skip #1\begin{document}[|whizzy@resume]
|endgroup

%% This will only be run is the document is complete (not a slice)
%% We put a few here

\def \whizzy@fulldocumenthook {}
\def \whizzy@resume
  {\endgroup 
   \message {[WisyTeX is resuming in LaTeX mode]}%
   \whizzy@fulldocumenthook
   \whizzy@wizfalse \relax
   \let \documentclass \latex@documentclass
   \begin{document}}

%% \document is going to be redefined so that it dumps a format, 
%% So we save the old value

\let \latex@document \document

%% The value after dump will do as before, after executing some hooks

\def \whizzy@document {\aftergroup \whizzy@begindocumenthook \latex@document}
\def \whizzy@begindocumenthook {}
\def \WhizzyAtBeginDocument {\g@addto@macro \whizzy@begindocumenthook}

%% Patch for loading aux files. 

\def \whizzy@newl@bel #1#2#3{\global \@namedef {#1@#2}{#3}}
\def \whizzy@loadaux 
 {\begingroup
    \@floatplacement \@dblfloatplacement \makeatletter \let \@writefile
     \@gobbletwo \global \let \@multiplelabels \relax 
     \@input {\jobname .aux}%
     \global \let \whizzy@multiplelabels \@multiplelabels
     \global \let \@newl@bel \whizzy@newl@bel
     \AtBeginDocument {\global \let  \@multiplelabels \whizzy@multiplelabels}%
  \endgroup}

%% Some stuff must be done after all packages and macros but before
%% .aux are loaded

\def \whizzy@beforeauxhook {}

%% Some stuff must after all macros and .aux are loaded, but before dumping

\def \whizzy@beforedumphook {}

%% We can now redefine \document to add a few work and hooks and dump the
%% format. 

\def \document 
  {\endgroup
   \whizzy@beforeauxhook
   \IfFileExists{whizzy.sty}{\usepackage{whizzy}}{}%
   \begingroup \def \@currenvir {document}%
   \whizzy@loadaux
   \endgroup
   \whizzy@beforedumphook
   \let \latex@documentclass \documentclass
   \let \documentclass \whizzy@documentclass
   \let \document \latex@document
   \dump}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Section 1: Robust stuff hooks on the core engine

%% put a hook everypagehook to be run at everypage, 
%% but extendable it has been placed

\g@addto@macro \whizzy@beforedumphook
   {\g@addto@macro \@begindvi
       {\g@addto@macro \@begindvi {\whizzy@everypage}}}
\def \whizzy@everypage {\whizzy@everypagehook}
\def \whizzy@everypagehook {}

%% How to print whizzy nice boxes
\let \whizzy@fbox \fbox

\g@addto@macro \whizzy@beforeauxhook
   {\@ifundefined {Whizzysafe}
       {\usepackage{color}\def \whizzy@fbox {\colorbox {yellow}}}
       {\let \whizzy@fbox \fbox \whizzy@tricksfalse}}

%% Macros for dumping sections in \@whizzy  (\jobname.pag)
%% Only done when in full document mode (not in a slice)

%% To print a nice blank or a test page
\def \WhizzyTeX {{Whizzy\kern -0.3ex\raise 0.2ex\hbox{\let \@\relax\TeX}}}
\def \WhizzyEmptyPage
{\par\noindent
\ifwhizzy@advi \else \let \whizzy@fbox \fbox\fi
\whizzy@fbox {\hsize=0.8\hsize\relax
\vbox {\huge \bigskip \centering \bf Welcome to \WhizzyTeX!\\[1em]
\Large This is an empty slice \\[1em] 
\LARGE Move to slice!
\par \bigskip}}}

\def \WhizzytexInput #1{
\message {[WhizzyTeX is dumping positions in _whizzy_#1.pag]}
\newwrite \@whizzy 
\immediate \openout \@whizzy _whizzy_#1.pag
\whizzy@putmarks
\WhizzyStart
\latex@iinput {#1.tex}%
}

%% Macros to dump section numbers

%% The current file (see below)
\edef \whizzy@curfile {\jobname}

\newif \ifwhizzy@appendix \whizzy@appendixfalse
\AtBeginDocument 
  {\@ifundefined {appendix}{}
     {\g@addto@macro \appendix {\whizzy@appendixtrue}}}

\def \whizzy@markon #1#2{%
  \expandafter \let \expandafter \@do \csname #1\endcsname
  \expandafter \let \csname whizzy@#1\endcsname \@do
  \def \@do {\whizzy@mark {#2}\csname whizzy@#1\endcsname}%
  \expandafter \let \csname #1\endcsname \@do
}
\def \whizzy@markafter #1#2{%
  \expandafter \let \expandafter \@do \csname #1\endcsname
  \expandafter \let \csname whizzy@#1\endcsname \@do
  \def \@do {\csname whizzy@#1\endcsname\whizzy@mark {#2}}%
  \expandafter \let \csname #1\endcsname \@do
}
\def \whizzy@putmarks {%
  \@ifundefined{c@chapter}{}{\whizzy@markon {chapter}{chapter}}%
  \whizzy@markon {section}{section}%
  \whizzy@markon {subsection}{subsection}%
  \whizzy@markon {subsubsection}{subsubsection}%
  %\whizzy@markafter {@outputpage}{page}%
}
\def \whizzy@mark #1{%
  \begingroup
   \filename@parse {\whizzy@curfile}%
   \xdef \whizzy@Curfile 
     {\whizzy@curfile \@ifundefined {filename@ext}{.tex}{}}%
   \immediate \write \@whizzy
   {\whizzy@Curfile:\the\inputlineno:#1@\thepage.%
    \@ifundefined{c@chapter}{}{\the\c@chapter.}%
    \the\c@section.\the\c@subsection.%
    \ifwhizzy@appendix 1\else 0\fi.}%
  \endgroup
}

\def \WhizzySlice #1.#2.#3.#4.{%
   \ifcase #4\or\appendix\fi
   \setcounter{page}{#1}%
   \setcounter{section}{#2}\setcounter{subsection}{#3}}
\def \Whizzy@chapter #1.#2.#3.#4.#5.{%
   \ifcase #5\or \appendix\fi
   \setcounter{page}{#1}\setcounter{chapter}{#2}%
   \setcounter{section}{#3}\setcounter{subsection}{#4}}
\def \Whizzy@file {%
   \@ifundefined {whizzy@\whizzy@local @}{}
     {\edef \@do {\csname whizzy@\whizzy@local @\endcsname}%
      \expandafter \WhizzySlice \@do\relax}}
\@ifundefined {c@chapter}{}{\let \WhizzySlice \Whizzy@chapter}


% What does this do??? only if not fulldocument 

\global \@specialpagefalse


%% In Master mode, we must also compute the current file.
%% We maintain this in \whizzy@curfile by putting a hook on input commands
%% Note: LateX should do this itself!

%% Keeping the current file up to date (needed for master mode sections)

%% Those will be redefined 

\let \latex@iinput \@iinput
\let \latex@input@ \@input@

\AtBeginDocument 
   {\let \@iinput \whizzy@iinput
    \let \@input@ \whizzy@input@}

%% Parsing file names to get a uniform representation....

\def \whizzy@tex {tex}
\def \whizzy@setfile #1{\xdef \whizzy@curfile {#1}}
\def \whizzy@setnorm #1{%
  \begingroup 
     \filename@parse {#1}%
     \xdef \whizzy@curfile
       {\filename@area\filename@base
        \@ifundefined {filename@ext}{}
           {\ifx \filename@ext \whizzy@tex \else .\filename@ext\fi}}%
  \endgroup
}
% We could interprepret the absence of file name as the master file name

%% Two commands must be redefined, so we share there code
\def \whizzy@iinput 
   {\expandafter \whizzy@input \expandafter{\whizzy@curfile}{\latex@iinput}}
\def \whizzy@input@
   {\expandafter \whizzy@input \expandafter{\whizzy@curfile}{\latex@input@}}

%% Note the use of a function to work with recursive inputs: we cannot 
%% open groups around the \input to save the name of current file to reset
%% it at the end. The function call just save the name over \input{...}

\def \whizzy@input #1#2#3{%
   \IfFileExists{#3}
      {\whizzy@setnorm{#3}%
       \immediate \write \@mainaux 
           {\string \gdef \string \whizzy @\whizzy@curfile @%
               {\thepage.\@ifundefined{c@chapter}{}{\the\c@chapter.}%
                \the\c@section.\the\c@subsection.}}%
           % could be removed if unsafe
          \whizzy@outputline {1}{\whizzy@curfile}%
      }{}%
    #2{#3}%
    \whizzy@setfile {#1}%
    \whizzy@writelineno
}

%% Print a header when the slice is mastered 
%% (we put a \whizzy@writelineno  hook for advi. 

\edef \whizzy@master {\jobname}

\def \whizzy@fill 
  {\leavevmode \leaders \hrule height 0.15em \hfill \kern \z@}
\def \whizzy@master@banner
  {\whizzy@setfile {\whizzy@master}%
   \vbox
    {\whizzy@outputline {0}{\whizzy@master}%
     \whizzy@outputline {0}{\whizzy@master}%
     \noindent
     {\LARGE\bf \whizzy@fill\space
       Mastered by \whizzy@master.tex{} \whizzy@fill}%
     \whizzy@outputline {0}{\whizzy@master}}%
     \whizzy@setfile {\whizzy@local}\par
   }
\def \whizzy@outputmaster {%
  \whizzy@master@banner
}
\def \whizzy@master@end{%
  \par \bigskip \whizzy@master@banner \par
}

\def \WhizzyMaster #1{%
  \def \whizzy@local {#1}%
  \par \whizzy@master@banner \par\bigskip
  \AtEndDocument {\whizzy@master@end}%\Whizzy@file
}

%%% Not necessary, but will make .idx file at every global run, and
%%% will not erase it when slicing.

\let \latex@makeindex \makeindex
\def \makeindex 
 {\g@addto@macro \whizzy@fulldocumenthook {\latex@makeindex}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Second section: optional, less robust stuff, could be turned off
%% May make a slice not compiling

%% Patch for overlays, still in use?

\newcommand {\WhizzySlide}[2][]
   {\let \overlay \whizzy@@overlay
    \def \whizzy@line{#2}\def \whizzy@layer{#1}}

\def \whizzy@@overlay #1{\ifnum #1>\whizzy@layer \whizzy@overlay 1\fi}
\g@addto@macro \whizzy@beforedumphook
  {\@ifundefined {overlay}{}%
      {\let \whizzy@overlay \overlay
%        \let \overlay \whizzy@@overlay
%        \g@addto@macro \whizzy@fulldocumenthook
%            {\let \overlay \whizzy@overlay}%
       }}


%% To show where the cursor is, we pick caracter code ^^A
%% This will break any mode that uses ^^A

\g@addto@macro \whizzy@beforedumphook
  {\AtBeginDocument {\whizzy@cursor}}%
\def \whizzy@cursor
  {\ifwhizzy@tricks \whizzy@activeA \whizzy@defA \fi}

%% The following seem to work in fragile commands such as index
%% Otherwise \whizzy@do should not be defined
% \AtBeginDocument 
%   {\let \latex@sanitize \@sanitize
%    \def \@sanitize {\latex@sanitize \catcode `\^^A 9}}
\let \whizzy@do \whizzy@empty
%% Why was the \catcode \^^A 2?
% \def \whizzy@A
%    {\def \whizzy@do{\catcode `\^^A 2\whizzy@markbegin}\ifinner
%     \ifmmode \else \let \whizzy@empty {}\fi \fi \whizzy@do}
\def \whizzy@A
   {\let \whizzy@do \whizzy@markbegin\ifinner
    \ifmmode \else \let \whizzy@empty {}\fi \fi \whizzy@do}
\def \whizzy@activeA {\catcode `\^^A \active}
\begingroup
\whizzy@activeA
\gdef \whizzy@defA {\def ^^A{\whizzy@A}}
\endgroup
\def \whizzy@markend 
   {\bgroup
      \setbox1 \hbox
         {\whizzy@fbox {\hskip -\fboxsep\strut \copy0\hskip -\fboxsep}}%
      \wd1 \wd0 \dp1 0em \ht1 0em \box1
    \egroup} 

\def \whizzy@markbegin
  {\whizzy@starthere
   \ifmmode \rlap {\setbox0 \hbox {\strut \space}\whizzy@markend}\else
   \ifhmode \rlap {\setbox0 \hbox {\strut \space}\whizzy@markend}\else 
      \ifvmode
        \nobreak
        \vskip -\baselineskip \nobreak
        \hbox {\vbox to 0em{\vskip 1em
               \setbox0 \hbox {\strut\space}\box1\whizzy@markend \vss}}%
        \nobreak
      \fi
   \fi \fi
  }

%% whizzy aux information for whizzy extentions, should be set here
%% so that several extension can share the same 

\newif \ifwhizzy@wiz \whizzy@wiztrue
\AtBeginDocument 
 {\ifwhizzy@wiz \@input {\jobname .wiz}\fi 
  \newwrite \@wizout \immediate \openout \@wizout \jobname.wiz
  \def \@wiz #1{\immediate \write \@wizout {#1}}%
 }


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Fourth section: independent cool, robust stuff

% Do not remenber why this... \whizzy@active should be better
%\AtBeginDocument {\catcode `\^^A \active}

\long \def \@Meaning #1{\string #1=\meaning #1\egroup}
\newcommand{\Meaning}
  {\par  \medskip \hrule \smallskip \vbox \bgroup
       \tt \hsize 0.7\hsize\makeatletter \@Meaning}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Last section: advi stuff

%%% Macros for dumping lines number, putting cursor, etc. 

\ifwhizzy@advi

% Do everything after \fi

\else


\let \WhizzySkip \relax
\let \WhizzyStart \relax
\let \WhizzyLine \whizzy@ignore
\let \whizzy@starthere \whizzy@empty
\def \whizzy@outputline #1#2{}


% Do not read after \fi
\expandafter \endinput 

\fi

%% These use advi special tricks

% \jobname should be the current file, instead. It is stored somewhere?
\def \whizzy@outputline #1#2{%
   \ifvmode \nobreak\fi\special {line: #1 #2 }\ifvmode \nobreak\fi
}
\def \whizzy@writelineno
   {\ifhmode \unskip \fi
    \xdef \whizzy@lastparno {\the\inputlineno}%
    \whizzy@outputline {\the\inputlineno}{\whizzy@curfile}}
\def \whizzy@pageno {0}
\def \whizzy@lastpageno {0}
\def \whizzy@writelastpage
  {\whizzy@outputline {\whizzy@lastpageno}{\whizzy@curfile}%
   \xdef \whizzy@lastpageno {\whizzy@pageno}%
   \xdef \whizzy@pageno {\the \inputlineno}%
}
\g@addto@macro \whizzy@everypagehook {\whizzy@writelastpage}


\def \whizzy@lineno@display 
   {\whizzy@writelineno \aftergroup \whizzy@writelineno}

% To insert the mark ``around'' the current line number
\edef\whizzy@quote{\string"}
\def \whizzy@starthere
   {%\ifhmode \unskip \fi
    \special {html:<A name=\whizzy@quote Start-Document\whizzy@quote>}%
    \special {html:</A>}%
    %\ifhmode \hskip \lastskip \fi
    \message {[Start-Document @ \whizzy@line -> \the\inputlineno\space
               \whizzy@curfile]}%
    \global \let \whizzy@checkline \relax
    \global \let \whizzy@@checkline \relax
    \global \let \whizzy@check@line \relax
    \global \let \begin \whizzy@begin
    \global \let \whizzy@starthere \relax
    }
\let \latex@@par \@@par
\let \whizzy@checkline \relax
\def \whizzy@@par 
  {\whizzy@checkline \whizzy@writelineno \latex@@par}
\let \whizzy@catcode \relax
\def \whizzy@@check@limit 
  {\ifnum \inputlineno>\whizzy@line \whizzy@starthere \fi}
\def \whizzy@@checkline {%
   \ifx \whizzy@curfile \whizzy@local
      \ifnum \inputlineno>\whizzy@linelimit
         \ifnum \inputlineno>\whizzy@line \whizzy@starthere 
         \else 
            \let \whizzy@checkline \whizzy@@check@limit
            \global \let \whizzy@@checkline \whizzy@@check@limit
            \edef \@tmp {\noexpand \whizzy@check@line  \the\everymath}%
            \expandafter \everymath \expandafter {\@tmp}%
         \fi
      \fi
   \fi
}
\let \whizzy@begin \begin
\def \whizzy@@begin {\whizzy@checkline \whizzy@begin}
\def \whizzy@check@line {\whizzy@checkline \aftergroup\whizzy@checkline}
%% In display mode, to still ignorespaces after display. 
%% hence \aftergroup \ignorespaces. However, spaces would still ignored when
%% the display ends with \eqno or \lqeno.  
\let \latex@eqno \eqno
\let \latex@leqno \leqno
\def \aftergroup@ignorespaces  {\aftergroup \ignorespaces}
\def \whizzy@eqno {\expandafter \latex@eqno \aftergroup@ignorespaces}
\def \whizzy@leqno {\expandafter \latex@leqno \aftergroup@ignorespaces}
\def \whizzy@check@line@ {\whizzy@checkline
 \aftergroup\whizzy@checkline \aftergroup\ignorespaces
 \let \leqno \whizzy@leqno \let \eqno \whizzy@eqno}
%%
\def \whizzy@line{}
\def \whizzy@nopar {\let \@@par \latex@@par \let \par \@@par}
\def \WhizzySkip  {\ifwhizzy@tricks \whizzy@nopar \fi}
\def \WhizzyStart {\ifwhizzy@tricks \whizzy@par \whizzy@writelineno \fi}


\def \whizzy@par {\let \@@par \whizzy@@par \let \par \@@par}
\def \WhizzyLine #1{%
  \def \whizzy@line{#1}%
  \bgroup \count0 #1\advance\count0 by -20
  \global \edef \whizzy@linelimit {\the \count0}\egroup%
  \let \whizzy@checkline \whizzy@@checkline
  \whizzy@par
  \everydisplay{\whizzy@lineno@display \let \halign \whizzy@halign
                \whizzy@check@line@}%
  \let \begin \whizzy@@begin%
}

%%% Hack because \whizzy@lineno@display generates $$\hbox{}\halign
%%% which is not correct. The \hbox cannot be removed.
%%% The other option is to remove lineno at beginning of display
%%% might be better.

\let \latex@halign \halign
\def \whizzy@endhalign {\egroup $$}
\def \whizzy@halign {\ifmmode 
 \vcenter \bgroup \everydisplay{}\let \halign \latex@halign 
  \abovedisplayskip 0em $$\aftergroup  \whizzy@endhalign \fi
  \latex@halign} 


\makeatother
\endinput

% whizzytex.sty ends here
